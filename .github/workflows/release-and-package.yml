name: Package and Release

on:
  push:
    tags: ['v*']

permissions:
  contents: write
  actions: read

jobs:
  build-mac:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: maven
      - name: Build DMG
        run: mvn -B -pl cli -am clean package verify -P mac
      - name: Upload macOS installer
        uses: actions/upload-artifact@v4
        with:
          name: pfm-mac
          path: cli/target/dist/*.dmg
          if-no-files-found: error

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: maven
      - name: Build Windows installer
        run: mvn -B -pl cli -am clean package verify -P windows
      - name: Upload Windows installer
        uses: actions/upload-artifact@v4
        with:
          name: pfm-win
          path: |
            cli/target/dist/*.exe
            cli/target/dist/*.msi
          if-no-files-found: warn

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: maven
      - name: Build Linux DEB
        run: mvn -B -pl cli -am clean package verify -P linux
      - name: Upload Linux installer
        uses: actions/upload-artifact@v4
        with:
          name: pfm-linux
          path: cli/target/dist/*.deb
          if-no-files-found: warn

  release:
    runs-on: ubuntu-latest
    needs: [build-mac, build-windows, build-linux]
    steps:
      - uses: actions/checkout@v4
      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: pfm-mac
          path: dist/mac
      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: pfm-win
          path: dist/windows
      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: pfm-linux
          path: dist/linux
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            dist/mac/*.dmg
            dist/windows/*.{exe,msi}
            dist/linux/*.deb
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
